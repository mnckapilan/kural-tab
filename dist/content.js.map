{"version":3,"file":"content.js","mappings":"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","sources":["webpack://kural-tab/./src/content.js"],"sourcesContent":["// A script that generates a static list of thirukkurals with english translation with them\n\nasync function setKural() {\n  const kuralElement = document.getElementById(\"kural\");\n  const explanationElement = document.getElementById(\"explanation\");\n  const mvElement = document.getElementById(\"mv\");\n  const numberElement = document.getElementById(\"number\");\n  const metadataElement = document.getElementById(\"metadata\");\n\n  try {\n    const [kuralResponse, metadataResponse] = await Promise.all([\n      fetch(\"data/thirukkural.json\"),\n      fetch(\"data/metadata.json\"),\n    ]);\n    const kuralData = await kuralResponse.json();\n    const metadataData = await metadataResponse.json();\n    const totalKurals = kuralData.kural.length;\n    const randomIndex = Math.floor(Math.random() * totalKurals);\n    const kural = kuralData.kural[randomIndex];\n\n    kuralElement.innerHTML = `<div>${kural.Line1}</div><div>${kural.Line2}</div>`;\n    explanationElement.innerHTML = kural.explanation;\n    mvElement.innerHTML = kural.mv;\n\n    const kuralMetadata = findKuralMetadata(metadataData[0], kural.Number);\n\n    numberElement.innerHTML = `${kural.Number}`;\n    metadataElement.innerHTML = `\n      <a href=\"https://thirukkural.gokulnath.com/#/thirukkuralchapters/${kuralMetadata.chapter.number}/thirukkurals\" target=\"_blank\" class=\"metadata-tree\">\n        <div class=\"section\">${kuralMetadata.section.tamil} – ${kuralMetadata.section.name}</div>\n        <div class=\"chapter\">${kuralMetadata.chapter.tamil} – ${kuralMetadata.chapter.name}</div>\n      </a>\n    `;\n\n    // Set the width of explanation and MV based on the widest Kural line\n    setTimeout(() => {\n      const kuralLines = kuralElement.getElementsByTagName(\"div\");\n      const maxWidth = Math.max(\n        kuralLines[0].offsetWidth,\n        kuralLines[1].offsetWidth\n      );\n      explanationElement.style.idth = `${maxWidth}px`;\n      mvElement.style.width = `${maxWidth}px`;\n    }, 0);\n  } catch (error) {\n    console.error(\"Error loading Thirukkural:\", error);\n    kuralElement.innerHTML = \"Failed to load Thirukkural\";\n    explanationElement.innerHTML = \"\";\n    mvElement.innerHTML = \"\";\n    numberElement.innerHTML = \"\";\n    metadataElement.innerHTML = \"\";\n  }\n}\n\nfunction findKuralMetadata(metadata, kuralNumber) {\n  for (const section of metadata.section.detail) {\n    for (const chapterGroup of section.chapterGroup.detail) {\n      for (const chapter of chapterGroup.chapters.detail) {\n        if (kuralNumber >= chapter.start && kuralNumber <= chapter.end) {\n          return {\n            section: {\n              name: section.translation,\n              tamil: section.name,\n            },\n            chapter: {\n              name: chapter.translation,\n              tamil: chapter.name,\n              number: chapter.number,\n            },\n          };\n        }\n      }\n    }\n  }\n  return null;\n}\n\n// Function to set the initial theme\nfunction setInitialTheme() {\n  document.body.classList.add(\"no-transition\");\n  if (chrome && chrome.storage && chrome.storage.sync) {\n    chrome.storage.sync\n      .get(\"theme\")\n      .then((data) => {\n        if (data.theme === \"light\") {\n          document.body.classList.add(\"light-mode\");\n          document.body.classList.remove(\"dark-mode\");\n          document.getElementById(\"mode-switch\").checked = true;\n        } else {\n          document.body.classList.add(\"dark-mode\");\n          document.body.classList.remove(\"light-mode\");\n          document.getElementById(\"mode-switch\").checked = false;\n        }\n        // Force a reflow before removing the class\n        void document.body.offsetWidth;\n        document.body.classList.remove(\"no-transition\");\n      })\n      .catch((error) => {\n        console.error(\"Error getting theme:\", error);\n        document.body.classList.remove(\"no-transition\");\n      });\n  } else {\n    // Default to dark mode if not in a Chrome extension context\n    document.body.classList.add(\"dark-mode\");\n    document.body.classList.remove(\"light-mode\");\n    document.getElementById(\"mode-switch\").checked = false;\n    // Force a reflow before removing the class\n    void document.body.offsetWidth;\n    document.body.classList.remove(\"no-transition\");\n  }\n}\n\n// Modified toggleMode function\nfunction toggleMode() {\n  const isLightMode = document.body.classList.toggle(\"light-mode\");\n  document.body.classList.toggle(\"dark-mode\");\n\n  // Save the theme preference if in a Chrome extension context\n  if (chrome && chrome.storage && chrome.storage.sync) {\n    chrome.storage.sync\n      .set({ theme: isLightMode ? \"light\" : \"dark\" })\n      .catch((error) => {\n        console.error(\"Error saving theme:\", error);\n      });\n  }\n}\n\n// Add event listener for mode toggle\ndocument.getElementById(\"mode-switch\").addEventListener(\"change\", toggleMode);\n\n// Call setInitialTheme when the page loads\ndocument.addEventListener(\"DOMContentLoaded\", setInitialTheme);\n\nsetKural();\n"],"names":["document","getElementById","addEventListener","isLightMode","body","classList","toggle","chrome","storage","sync","set","theme","catch","error","console","add","get","then","data","remove","checked","offsetWidth","async","kuralElement","explanationElement","mvElement","numberElement","metadataElement","kuralResponse","metadataResponse","Promise","all","fetch","kuralData","json","metadataData","totalKurals","kural","length","randomIndex","Math","floor","random","innerHTML","Line1","Line2","explanation","mv","kuralMetadata","metadata","kuralNumber","section","detail","chapterGroup","chapter","chapters","start","end","name","translation","tamil","number","findKuralMetadata","Number","setTimeout","kuralLines","getElementsByTagName","maxWidth","max","style","idth","width","setKural"],"sourceRoot":""}